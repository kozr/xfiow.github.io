{"version":3,"sources":["assets/drinking.png","assets/icons/ASKEY.png","assets/icons/home.svg","assets/icons/settings.svg","assets/icons/contact.svg","assets/icons/star.svg","logo.svg","assets/initials_circle.svg","components/Button/Button.js","components/ButtonFloat/ButtonFloat.js","components/StreamPanel/StreamPanel.js","components/ProfilePic/ProfilePic.js","components/Header/Header.js","components/BottomPanel/BottomPanel.js","components/NavBar/NavBar.js","components/SidePanel/Messenger/MessengeList.js","components/SidePanel/Messenger/SendMessageForm.js","components/SidePanel/SidePanel.js","components/ProfileGroup/Profile/Profile.js","components/ProfileGroup/ProfileGroup.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Button","_this$props$buttonLab","this","props","buttonLabel","react_default","a","createElement","onClick","Component","ButtonFloat","string","console","log","_this2","isFullScreen","className","id","components_Button_Button","StreamPanel","components_ButtonFloat_ButtonFloat","src","scrolling","Profilepic","array","activeName","split","initials","charAt","Header","_this$props","isSelected","ProfilePic_ProfilePic","ASKEY","BottomPanel","NavBar","_this","home","contact","star","settings","MessageList","messages","map","message","index","username","senderId","key","text","SendMessengeForm","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","handleChange","bind","assertThisInitialized","handleSubmit","e","setState","target","value","preventDefault","sendMessage","onSubmit","onChange","placeholder","type","SidePanel","ChatManager","instanceLocator","userId","tokenProvider","TokenProvider","url","connect","then","currentUser","subscribeToRoom","roomId","hooks","onMessage","concat","toConsumableArray","Messenger_MessengeList","Messenger_SendMessageForm","Profile","name","colorArray","color","Math","floor","random","length","ProfileGroup","names","ProfileGroup_Profile_Profile","App","personSelected","isMuted","_this$state","components_NavBar_NavBar","components_Header_Header","components_SidePanel_SidePanel","components_ProfileGroup_ProfileGroup","components_StreamPanel_StreamPanel","components_BottomPanel_BottomPanel","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d2d4171f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/drinking.d1aece61.png\";","module.exports = __webpack_public_path__ + \"static/media/ASKEY.0345034e.png\";","module.exports = __webpack_public_path__ + \"static/media/home.fb51ba2a.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.4de19535.svg\";","module.exports = __webpack_public_path__ + \"static/media/contact.d4f90264.svg\";","module.exports = __webpack_public_path__ + \"static/media/star.f2c23694.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/initials_circle.f667f595.svg\";","import React, { Component } from \"react\";\r\n// import add from \"../../assets/add.svg\";\r\n\r\nclass Button extends Component {\r\n  render() {\r\n    const { buttonLabel = \"default\" } = this.props;\r\n    return (\r\n      <div onClick={this.props.onClick}>\r\n        {/* <img src={add} /> */}\r\n        <div>{buttonLabel}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Button from \"../Button/Button\";\r\n\r\nimport \"./ButtonFloat.css\";\r\n\r\nclass ButtonFloat extends Component {\r\n  onClick = string => {\r\n    console.log(string);\r\n  };\r\n  render() {\r\n    const { isFullScreen } = this.props;\r\n    return (\r\n      <div className={isFullScreen ? \"ButtonFloat-full\" : \"ButtonFloat-small\"}>\r\n        <div id=\"end\" className=\"FloatOption\">\r\n          <Button\r\n            buttonLabel=\"END\"\r\n            onClick={() => {\r\n              this.props.onClick(\"end\");\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"spacer\" />\r\n        <div id=\"mute\" className=\"FloatOption\">\r\n          <Button\r\n            buttonLabel=\"MUTE\"\r\n            onClick={() => {\r\n              this.props.onClick(\"mute\");\r\n            }}\r\n          />\r\n        </div>\r\n        <div id=\"fullscreen\" className=\"FloatOption\">\r\n          <Button\r\n            buttonLabel={isFullScreen ? \"EXIT SCREEN\" : \"FULL SCREEN\"}\r\n            onClick={() => {\r\n              this.props.onClick(\"fullscreen\");\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ButtonFloat;\r\n","import React, { Component } from \"react\";\r\n\r\nimport ButtonFloat from \"../ButtonFloat/ButtonFloat\";\r\n\r\nimport drinking from \"../../assets/drinking.png\";\r\n\r\nimport \"./StreamPanel.css\";\r\n\r\nclass StreamPanel extends Component {\r\n  render() {\r\n    const { isFullScreen } = this.props;\r\n    return (\r\n      <div>\r\n        {/* <img\r\n          className={isFullScreen ? \"test-image-full\" : \"test-image-small\"}\r\n          src={drinking}\r\n        /> */}\r\n        <ButtonFloat isFullScreen={isFullScreen} onClick={this.props.onClick} />\r\n        <iframe\r\n          src=\"http://10.19.130.172:8001\"\r\n          className={isFullScreen ? \"test-image-full\" : \"test-image-small\"}\r\n          scrolling=\"no\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StreamPanel;\r\n","import React, { Component } from \"react\";\r\nimport \"../../App.css\";\r\nimport \"./ProfilePic.css\";\r\nimport logo from \"../../assets/initials_circle.svg\";\r\n\r\nclass Profilepic extends Component {\r\n  render() {\r\n    const { activeName } = this.props;\r\n    const array = activeName.split(\" \");\r\n    const initials = array[0].charAt(0) + array[1].charAt(0);\r\n    return (\r\n      <div className=\"circle\">\r\n        <div className=\"circle-text\">{initials}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profilepic;\r\n","import React, { Component } from \"react\";\r\nimport \"../../App.css\";\r\nimport \"./Header.css\";\r\nimport ProfilePic from \"../ProfilePic/ProfilePic\";\r\nimport ASKEY from \"../../assets/icons/ASKEY.png\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    const { isSelected, activeName } = this.props;\r\n    return (\r\n      <div className=\"header\">\r\n        {isSelected && <ProfilePic activeName={activeName} />}\r\n        <img src={ASKEY} className=\"logo\" />\r\n        <div className=\"name\"> {activeName}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nclass BottomPanel extends Component {\r\n  render() {\r\n    return <div>This is a bottom panel.</div>;\r\n  }\r\n}\r\n\r\nexport default BottomPanel;\r\n","import React, { Component } from \"react\";\r\nimport \"../../App.css\";\r\nimport \"./NavBar.css\";\r\n\r\nimport home from \"../../assets/icons/home.svg\";\r\nimport settings from \"../../assets/icons/settings.svg\";\r\nimport contact from \"../../assets/icons/contact.svg\";\r\nimport star from \"../../assets/icons/star.svg\";\r\n\r\nclass NavBar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"NavBar\">\r\n        <img\r\n          className=\"iconBar\"\r\n          onClick={() => {\r\n            this.props.onClick(\"end\");\r\n          }}\r\n          src={home}\r\n        />\r\n        <img className=\"iconBar\" src={contact} />\r\n        <img className=\"iconBar\" src={star} />\r\n        <img className=\"iconBar\" src={settings} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\nimport \"../../../App.css\";\r\nimport \"./MessengeList.css\"\r\n\r\nclass MessageList extends Component {\r\n  render() {\r\n      return (\r\n          <ul id=\"style-2\"className=\"message-list\">\r\n              {this.props.messages.map((message, index) => {\r\n                  return (\r\n                    <div className={this.props.username === message.senderId ? 'rightAlign' : 'leftAlign'}>\r\n                    <li key={message.id} className=\"message\">\r\n                      <div>{message.senderId}</div>\r\n                      <div>{message.text}</div>\r\n                    </li>\r\n                    </div>\r\n                  )\r\n              })}\r\n          </ul>\r\n      )\r\n  }\r\n}\r\n\r\n\r\nexport default MessageList;","import React, { Component } from \"react\";\r\nimport \"../../../App.css\";\r\nimport \"./SendMessageForm.css\";\r\n\r\nclass SendMessengeForm extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            message: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    \r\n    handleChange(e) {\r\n        this.setState({\r\n            message: e.target.value\r\n        })\r\n    }\r\n    \r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        this.props.sendMessage(this.state.message);\r\n        this.setState({\r\n            message: ''\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <form\r\n                onSubmit={this.handleSubmit}\r\n                className=\"send-message-form\">\r\n                <input\r\n                    onChange={this.handleChange}\r\n                    value={this.state.message}\r\n                    placeholder=\"Enter your message..\"\r\n                    type=\"text\" />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SendMessengeForm;","import React, { Component } from \"react\";\r\nimport \"../../App.css\";\r\nimport \"./SidePanel.css\";\r\nimport MessageList from \"./Messenger/MessengeList\";\r\nimport SendMessageForm from \"./Messenger/SendMessageForm\";\r\nimport { ChatManager, TokenProvider } from \"@pusher/chatkit-client\";\r\n\r\nconst instanceLocator = \"v1:us1:1e3ffb93-6c72-4127-9fe8-357f6a6bd52b\";\r\n\r\nconst testToken =\r\n  \"https://us1.pusherplatform.io/services/chatkit_token_provider/v1/1e3ffb93-6c72-4127-9fe8-357f6a6bd52b/token\";\r\n \r\n \r\nconst roomId = \"19379139\";\r\n\r\n\r\nclass SidePanel extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      messages: [],\r\n      username: \"Nicholas\"\r\n    };\r\n    this.sendMessage = this.sendMessage.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const chatManager = new ChatManager({\r\n      instanceLocator: instanceLocator,\r\n      userId: this.state.username,\r\n      tokenProvider: new TokenProvider({\r\n        url: testToken\r\n      })\r\n    });\r\n\r\n    chatManager.connect().then(currentUser => {\r\n      this.currentUser = currentUser;\r\n      console.log(\"Successful connection\", currentUser);\r\n      this.currentUser.subscribeToRoom({\r\n        roomId: roomId,\r\n        hooks: {\r\n          onMessage: message => {\r\n            this.setState({\r\n              messages: [...this.state.messages, message]\r\n            });\r\n          }\r\n        }\r\n      });\r\n  \r\n    });\r\n  }\r\n\r\n  sendMessage(text) {\r\n    this.currentUser.sendMessage({\r\n      text,\r\n      roomId: roomId\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"SidePanel\">\r\n        <div>Message</div>\r\n        <MessageList\r\n          roomId={this.state.roomId}\r\n          messages={this.state.messages}\r\n          username={this.state.username}\r\n        />\r\n        \r\n        <SendMessageForm sendMessage={this.sendMessage} />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SidePanel;\r\n","import React, { Component } from \"react\";\r\nimport \"../../../App.css\";\r\nimport \"./Profile.css\";\r\n\r\nclass Profile extends Component {\r\n  render() {\r\n    const { name } = this.props;\r\n    const colorArray = [\r\n      \"red\",\r\n      \"red\",\r\n      \"blue\",\r\n      \"blue\",\r\n      \"green\",\r\n      \"green\",\r\n      \"orange\",\r\n      \"purple\",\r\n      \"purple\",\r\n      \"grey\",\r\n      \"grey\",\r\n      \"teal\",\r\n      \"brown\",\r\n      \"dark-blue\"\r\n    ];\r\n    let color = colorArray[Math.floor(Math.random() * colorArray.length)];\r\n    return (\r\n      <div className=\"rectangle\" id={color} onClick={this.props.onClick}>\r\n        <div className=\"initial\">{name.charAt(0)}</div>\r\n        <div className=\"profileComp\">{name}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from \"react\";\r\nimport \"../../App.css\";\r\nimport Profile from \"./Profile/Profile\";\r\nimport \"../ProfileGroup/ProfileGroup.css\";\r\n\r\nclass ProfileGroup extends Component {\r\n  state = {\r\n    names: [\r\n      \"John Doe\",\r\n      \"Zach Shawcross\",\r\n      \"Yep Heff\",\r\n      \"Jane Vein\",\r\n      \"Andy Hona\",\r\n      \"Steve Nate\",\r\n      \"Bill Cobs\",\r\n      \"Keith Hou\"\r\n    ]\r\n  };\r\n\r\n  render() {\r\n    const { names } = this.state;\r\n    return (\r\n      <div className=\"groupSpacing\">\r\n        <div className=\"firstRow\">\r\n          <Profile\r\n            onClick={() => {\r\n              this.props.onClick(names[0]);\r\n            }}\r\n            name={this.state.names[0]}\r\n          />\r\n          <Profile\r\n            onClick={() => {\r\n              this.props.onClick(names[1]);\r\n            }}\r\n            name={this.state.names[1]}\r\n          />\r\n          <Profile\r\n            onClick={() => {\r\n              this.props.onClick(names[2]);\r\n            }}\r\n            name={this.state.names[2]}\r\n          />\r\n          <Profile\r\n            onClick={() => {\r\n              this.props.onClick(names[3]);\r\n            }}\r\n            name={this.state.names[3]}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"secondRow\">\r\n          <Profile\r\n            onClick={() => {\r\n              this.props.onClick(names[4]);\r\n            }}\r\n            name={this.state.names[4]}\r\n          />\r\n          <Profile\r\n            onClick={() => {\r\n              this.props.onClick(names[5]);\r\n            }}\r\n            name={this.state.names[5]}\r\n          />\r\n          <Profile\r\n            onClick={() => {\r\n              this.props.onClick(names[6]);\r\n            }}\r\n            name={this.state.names[6]}\r\n          />\r\n          <Profile\r\n            onClick={() => {\r\n              this.props.onClick(names[7]);\r\n            }}\r\n            name={this.state.names[7]}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileGroup;\r\n","import React, { Component } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport Button from \"../src/components/Button/Button\";\r\nimport StreamPanel from \"./components/StreamPanel/StreamPanel\";\r\nimport Header from \"./components/Header/Header\";\r\nimport BottomPanel from \"./components/BottomPanel/BottomPanel\";\r\nimport NavBar from \"./components/NavBar/NavBar\";\r\nimport SidePanel from \"./components/SidePanel/SidePanel\";\r\nimport ProfileGroup from \"./components/ProfileGroup/ProfileGroup\";\r\nimport \"../src/constants/styles.css\";\r\nimport drinking from \"./assets/drinking.png\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isSelected: false,\r\n      isFullScreen: false,\r\n      isMuted: false,\r\n      activeName: \"\"\r\n    };\r\n  }\r\n\r\n  personSelected = name => {\r\n    this.setState({ activeName: name, isSelected: true });\r\n  };\r\n  onClick = string => {\r\n    if (string === \"end\") {\r\n      // console.log(\"is selected to false\");\r\n      this.setState({ isSelected: false, activeName: \"\", isFullScreen: false });\r\n    }\r\n    if (string === \"mute\") {\r\n      // if (this.state.isMuted) {\r\n      //   console.log(\"is muted to false\");\r\n      // } else {\r\n      //   console.log(\"is muted to true\");\r\n      // }\r\n      this.setState({ isMuted: this.state.isMuted ? false : true });\r\n    }\r\n    if (string === \"fullscreen\") {\r\n      // if (this.state.isFullScreen) {\r\n      //   console.log(\"full screen to false\");\r\n      // } else {\r\n      //   console.log(\"full screen to true\");\r\n      // }\r\n      this.setState({ isFullScreen: this.state.isFullScreen ? false : true });\r\n    }\r\n  };\r\n  render() {\r\n    const { isSelected, isFullScreen, activeName } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        {!isFullScreen && <NavBar onClick={this.onClick} />}\r\n        {!isFullScreen && (\r\n          <Header activeName={activeName} isSelected={isSelected} />\r\n        )}\r\n        {!isFullScreen && <SidePanel />}\r\n        {!isSelected && !isFullScreen && (\r\n          <ProfileGroup onClick={this.personSelected} />\r\n        )}\r\n        {isSelected && (\r\n          <StreamPanel onClick={this.onClick} isFullScreen={isFullScreen} />\r\n        )}\r\n        {isSelected && !isFullScreen && <BottomPanel />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}